@mixin gz-make-container ($width: null) {
  // Create a new positioning context for child elements.
  position: relative;
  // Center the container.
  margin-right: auto;
  margin-left: auto;
  // Add side padding.
  padding: 0 $gz-container-side-padding;
  // Avoid overflowing by keeping the container at a
  // max-width 100% of its parent. This also allows
  // containers to be nested.
  max-width: 100%;
  // Set container width.
  width: $width;
  // border-box forces the browser to include padding
  // and borders when calculating the width.
  box-sizing: border-box;
  // Clear floating elements.
  @include gz-clear-floats;
}

@mixin gz-make-container-size($container-name, $is-responsive: true) {
  @include gz-make-responsive($is-responsive) {
    $breakpoint-index: gz-key-index($gz-breakpoints, $gz-breakpoint);
    $container-index: gz-key-index($gz-container-sizes, $container-name);

    @if ($is-responsive == true) {
      // The container matches the breakpoint if its index in
      // the stack is equal to or larger than the index of the
      // breakpoint.
      @if $container-index >= $breakpoint-index {
        width: map-get($gz-container-sizes, $gz-breakpoint);
      }
    } @else {
      // If responsive features are disabled for the containers,
      // simply set the approperiate width.
      width: map-get($gz-container-sizes, $container-name);
    }
  }
}
