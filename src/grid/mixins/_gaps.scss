@mixin gz-make-gaps ($size) {
  // Gaps will be created by padding on both sides of the unit
  // (hence multiplication by 0.5) and negative margins on both
  // sides of the parent.
  $size: 0.5 * $size;

  margin: -#{$size};

  > [class*='#{$gz-prefix}unit-'] {
    padding: #{$size};
  }

  // Create gaps between consecutive grids.
  &:not(:last-child) {
    margin-bottom: #{$size};
  }
}

@mixin gz-make-smallest-gaps {
  @include gz-make-gaps($gz-smallest-gaps-value);
}

@mixin gz-make-smaller-gaps {
  @include gz-make-gaps($gz-smaller-gaps-value);
}

@mixin gz-make-small-gaps {
  @include gz-make-gaps($gz-small-gaps-value);
}

@mixin gz-make-medium-gaps {
  @include gz-make-gaps($gz-medium-gaps-value);
}

@mixin gz-make-large-gaps {
  @include gz-make-gaps($gz-large-gaps-value);
}

@mixin gz-make-larger-gaps {
  @include gz-make-gaps($gz-larger-gaps-value);
}

@mixin gz-make-largest-gaps {
  @include gz-make-gaps($gz-largest-gaps-value);
}

@mixin gz-make-no-gaps {
  @include gz-make-gaps(0);
}
