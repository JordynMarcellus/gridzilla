@import "container-mixins";

[class*="#{$gz-prefix}container-"] {
  @include gz-make-container;
}

// Fluid container
.#{$gz-prefix}container-fluid {
  width: 100%;
}

// Fixed-width container
@include gz-make-responsive($gz-container-responsive-enabled) {
  $breakpoint-index: gz-key-index($gz-breakpoints, $gz-breakpoint);

  @if ($gz-container-responsive-enabled == true) {
    // Create a placeholder for containers that match the current breakpoint.
    %containers-#{$gz-breakpoint} {
      width: map-get($gz-container-sizes, $gz-breakpoint);
    }

    // Iterate over all containers and extend the placeholder if the container
    // matches the current breakpoint.
    @each $container-name, $container-width in $gz-container-sizes {
      $container-index: gz-key-index($gz-container-sizes, $container-name);

      // The container matches the breakpoint if its index in the stack is equal to
      // or larger than the index of the breakpoint.
      @if $container-index >= $breakpoint-index {
        .#{$gz-prefix}container-#{$container-name} {
          @extend %containers-#{$gz-breakpoint};
        }
      }
    }
  } @else {
    // If responsive features are disabled for the containers, simply set
    // the approperiate width for each container.
    @each $container-name, $container-width in $gz-container-sizes {
      .#{$gz-prefix}container-#{$container-name} {
        width: map-get($gz-container-sizes, $container-name);
      }
    }
  }
}
